<Application x:Class="HammerHead.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:HammerHead"
             xmlns:Icon ="http://metro.mahapps.com/winfx/xaml/iconpacks"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style x:Key="ButtonRound" TargetType="Button">
            <Setter Property="Background" Value="#8573db"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="10">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#6658a7"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="BaseForButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Margin" Value="0 10"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="15,0,0,15">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#6658a7"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="menuList" TargetType="Button" BasedOn="{StaticResource BaseForButton}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#6658a7"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="pcapList" TargetType="Button" BasedOn="{StaticResource BaseForButton}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Setter Property="Background" Value="#FF0A7BAB"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Yes" TargetType="Button" BasedOn="{StaticResource BaseForButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="15">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Setter Property="Background" Value="#FF00E037"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="No" TargetType="Button" BasedOn="{StaticResource BaseForButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="15">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Setter Property="Background" Value="#FFFB3030"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ComboBoxButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="White"   
                                 x:Name="border"   
                                 CornerRadius="10"   
                                 BorderThickness="1"  
                                 BorderBrush="#8573db">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton Margin="0"  
                               Height="{TemplateBinding Height}"  
                               Style="{StaticResource ComboBoxButton}"  
                               Focusable="False"  
                               IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"  
                               ClickMode="Press">

                                <Path 
                                  HorizontalAlignment="Right" Margin="0,0,5,0"  
                                  VerticalAlignment="Center"  
                                  Data="M 0 0 L 4 4 L 8 0 Z"  
                                  Fill="#8573db" />

                            </ToggleButton>
                            <ContentPresenter Name="ContentSite"  
                                   Content="{TemplateBinding SelectionBoxItem}"  
                                   ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"  
                                   ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"  
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"  
                                   Margin="0,0,5,0" IsHitTestVisible="False"/>
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" BorderThickness="1" CornerRadius="10" BorderBrush="#8573db" Background="White"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RoundBorder" TargetType="Border">
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#8573db"/>
            <Setter Property="Background" Value="White"/>
        </Style>
        <Style x:Key="RoundBorderLeft" TargetType="Border" BasedOn="{StaticResource RoundBorder}">
            <Setter Property="CornerRadius" Value="10,0,0,10"/>
        </Style>
        <Style x:Key="RoundBorderRight" TargetType="Border" BasedOn="{StaticResource RoundBorder}"><Setter Property="CornerRadius" Value="0,10,10,0"/></Style>
        <Style x:Key="SmolIcon" TargetType="Icon:PackIconMaterial">
            <Setter Property="Foreground" Value="#ffffff"/>
            <Setter Property="Width" Value="25"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>
        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#222528"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="AutoGenerateColumns" Value="False" />
            <Setter Property="HeadersVisibility" Value="Column" />
            <Setter Property="Margin" Value="0 10 0 0" />
            <Setter Property="Grid.Row" Value="5" />
            <Setter Property="SelectionMode" Value="Single" />
            <Setter Property="SelectionUnit" Value="FullRow" />
            <Setter Property="CanUserAddRows" Value="False" />
            <Setter Property="CanUserDeleteRows" Value="False" />
            <Setter Property="CanUserReorderColumns" Value="False" />
            <Setter Property="CanUserResizeRows" Value="False" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="GridLinesVisibility" Value="Vertical" />
        </Style>

        <Style x:Key="ToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="#d1d1d1"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="55"/>
            <Setter Property="MaxHeight" Value="30"/>
            <Setter Property="MaxWidth" Value="55"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <Border x:Name="Border" Background="{TemplateBinding Background}"
                                    CornerRadius="15" Height="30"
                                    Width="55" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <Ellipse x:Name="Ellipse" Height="25" Width="25" VerticalAlignment="Center" HorizontalAlignment="Left" Fill="#f1f1f1" Margin="2 0 0 0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Checked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="#4be493" Duration="0:0:0.2"/>
                                        <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="27 0 0 0" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="Unchecked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="#d1d1d1" Duration="0:0:0.2"/>
                                        <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="2 0 0 0" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
